syntax = "proto3";

option go_package = "./grpclib";

package grpclib;

// service name.
service CryptoService {
  rpc SSMEncrypt (CryptoRequest) returns (SSMReply) {}
  rpc SSMDecrypt (CryptoRequest) returns (SSMReply) {}  
  rpc SSMGetRandom (RandomRequest) returns (SSMReply) {}
  rpc SSMPing (EmptyRequest) returns (SSMReply) {}
}

// encrypt/decrypt request
message CryptoRequest {
  string version = 1;
  enum KeyType {
    KEY_TYPE_UNSPECIFIED = 0;
    KEY_TYPE_ENCRYPTION = 1;
    KEY_TYPE_DECRYPTION = 2;
    KEY_TYPE_MAC = 3;
  }
  KeyType key_type = 2;
  message KeyInfo {
    string algorithm = 1;
    int32  bitslength = 2;
    string mode = 3;
  }
  KeyInfo keyInfo = 3;
  bytes inputBuffer = 4;  
  // min=16, max=4096
  int32 inputBufferSize = 5;
}

// get random request
message RandomRequest {
  string version = 1;
  // fixed=32
  int32 randomSize = 2;
}

// grpc reply
message SSMReply {
  int32 status = 1; // 0:success, >0 error code, <0 undefined.
  bytes outputBuffer = 2;
  int32 outputBufferSize = 3;
}

// ping request
message EmptyRequest {
}

