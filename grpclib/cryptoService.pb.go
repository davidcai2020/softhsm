// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: grpclib/cryptoService.proto

package grpclib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CryptoRequest_KeyType int32

const (
	CryptoRequest_KEY_TYPE_UNSPECIFIED CryptoRequest_KeyType = 0
	CryptoRequest_KEY_TYPE_ENCRYPTION  CryptoRequest_KeyType = 1
	CryptoRequest_KEY_TYPE_DECRYPTION  CryptoRequest_KeyType = 2
	CryptoRequest_KEY_TYPE_MAC         CryptoRequest_KeyType = 3
)

// Enum value maps for CryptoRequest_KeyType.
var (
	CryptoRequest_KeyType_name = map[int32]string{
		0: "KEY_TYPE_UNSPECIFIED",
		1: "KEY_TYPE_ENCRYPTION",
		2: "KEY_TYPE_DECRYPTION",
		3: "KEY_TYPE_MAC",
	}
	CryptoRequest_KeyType_value = map[string]int32{
		"KEY_TYPE_UNSPECIFIED": 0,
		"KEY_TYPE_ENCRYPTION":  1,
		"KEY_TYPE_DECRYPTION":  2,
		"KEY_TYPE_MAC":         3,
	}
)

func (x CryptoRequest_KeyType) Enum() *CryptoRequest_KeyType {
	p := new(CryptoRequest_KeyType)
	*p = x
	return p
}

func (x CryptoRequest_KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CryptoRequest_KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpclib_cryptoService_proto_enumTypes[0].Descriptor()
}

func (CryptoRequest_KeyType) Type() protoreflect.EnumType {
	return &file_grpclib_cryptoService_proto_enumTypes[0]
}

func (x CryptoRequest_KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CryptoRequest_KeyType.Descriptor instead.
func (CryptoRequest_KeyType) EnumDescriptor() ([]byte, []int) {
	return file_grpclib_cryptoService_proto_rawDescGZIP(), []int{0, 0}
}

// encrypt/decrypt request
type CryptoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	KeyType     CryptoRequest_KeyType  `protobuf:"varint,2,opt,name=key_type,json=keyType,proto3,enum=grpclib.CryptoRequest_KeyType" json:"key_type,omitempty"`
	KeyInfo     *CryptoRequest_KeyInfo `protobuf:"bytes,3,opt,name=keyInfo,proto3" json:"keyInfo,omitempty"`
	InputBuffer []byte                 `protobuf:"bytes,4,opt,name=inputBuffer,proto3" json:"inputBuffer,omitempty"`
	// min=16, max=4096
	InputBufferSize int32 `protobuf:"varint,5,opt,name=inputBufferSize,proto3" json:"inputBufferSize,omitempty"`
}

func (x *CryptoRequest) Reset() {
	*x = CryptoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpclib_cryptoService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoRequest) ProtoMessage() {}

func (x *CryptoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpclib_cryptoService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoRequest.ProtoReflect.Descriptor instead.
func (*CryptoRequest) Descriptor() ([]byte, []int) {
	return file_grpclib_cryptoService_proto_rawDescGZIP(), []int{0}
}

func (x *CryptoRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CryptoRequest) GetKeyType() CryptoRequest_KeyType {
	if x != nil {
		return x.KeyType
	}
	return CryptoRequest_KEY_TYPE_UNSPECIFIED
}

func (x *CryptoRequest) GetKeyInfo() *CryptoRequest_KeyInfo {
	if x != nil {
		return x.KeyInfo
	}
	return nil
}

func (x *CryptoRequest) GetInputBuffer() []byte {
	if x != nil {
		return x.InputBuffer
	}
	return nil
}

func (x *CryptoRequest) GetInputBufferSize() int32 {
	if x != nil {
		return x.InputBufferSize
	}
	return 0
}

// get random request
type RandomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// fixed=32
	RandomSize int32 `protobuf:"varint,2,opt,name=randomSize,proto3" json:"randomSize,omitempty"`
}

func (x *RandomRequest) Reset() {
	*x = RandomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpclib_cryptoService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomRequest) ProtoMessage() {}

func (x *RandomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpclib_cryptoService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomRequest.ProtoReflect.Descriptor instead.
func (*RandomRequest) Descriptor() ([]byte, []int) {
	return file_grpclib_cryptoService_proto_rawDescGZIP(), []int{1}
}

func (x *RandomRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RandomRequest) GetRandomSize() int32 {
	if x != nil {
		return x.RandomSize
	}
	return 0
}

// grpc reply
type SSMReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // 0:success, >0 error code, <0 undefined.
	OutputBuffer     []byte `protobuf:"bytes,2,opt,name=outputBuffer,proto3" json:"outputBuffer,omitempty"`
	OutputBufferSize int32  `protobuf:"varint,3,opt,name=outputBufferSize,proto3" json:"outputBufferSize,omitempty"`
}

func (x *SSMReply) Reset() {
	*x = SSMReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpclib_cryptoService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSMReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSMReply) ProtoMessage() {}

func (x *SSMReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpclib_cryptoService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSMReply.ProtoReflect.Descriptor instead.
func (*SSMReply) Descriptor() ([]byte, []int) {
	return file_grpclib_cryptoService_proto_rawDescGZIP(), []int{2}
}

func (x *SSMReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SSMReply) GetOutputBuffer() []byte {
	if x != nil {
		return x.OutputBuffer
	}
	return nil
}

func (x *SSMReply) GetOutputBufferSize() int32 {
	if x != nil {
		return x.OutputBufferSize
	}
	return 0
}

// ping request
type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpclib_cryptoService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpclib_cryptoService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_grpclib_cryptoService_proto_rawDescGZIP(), []int{3}
}

type CryptoRequest_KeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm  string `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Bitslength int32  `protobuf:"varint,2,opt,name=bitslength,proto3" json:"bitslength,omitempty"`
	Mode       string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *CryptoRequest_KeyInfo) Reset() {
	*x = CryptoRequest_KeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpclib_cryptoService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoRequest_KeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoRequest_KeyInfo) ProtoMessage() {}

func (x *CryptoRequest_KeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpclib_cryptoService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoRequest_KeyInfo.ProtoReflect.Descriptor instead.
func (*CryptoRequest_KeyInfo) Descriptor() ([]byte, []int) {
	return file_grpclib_cryptoService_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CryptoRequest_KeyInfo) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *CryptoRequest_KeyInfo) GetBitslength() int32 {
	if x != nil {
		return x.Bitslength
	}
	return 0
}

func (x *CryptoRequest_KeyInfo) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

var File_grpclib_cryptoService_proto protoreflect.FileDescriptor

var file_grpclib_cryptoService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67,
	0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x22, 0xb0, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53,
	0x69, 0x7a, 0x65, 0x1a, 0x5b, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x69, 0x74, 0x73, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x69, 0x74, 0x73, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x22, 0x67, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4b,
	0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x4b, 0x45, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x43, 0x10, 0x03, 0x22, 0x49, 0x0a, 0x0d, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x72, 0x0a, 0x08, 0x53, 0x53, 0x4d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xf9, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x53, 0x53,
	0x4d, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c,
	0x69, 0x62, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x53, 0x53, 0x4d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x53, 0x53, 0x4d, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x53, 0x53, 0x4d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x53, 0x4d, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c,
	0x69, 0x62, 0x2e, 0x53, 0x53, 0x4d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x07, 0x53, 0x53, 0x4d, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c,
	0x69, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0x2e, 0x53, 0x53, 0x4d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpclib_cryptoService_proto_rawDescOnce sync.Once
	file_grpclib_cryptoService_proto_rawDescData = file_grpclib_cryptoService_proto_rawDesc
)

func file_grpclib_cryptoService_proto_rawDescGZIP() []byte {
	file_grpclib_cryptoService_proto_rawDescOnce.Do(func() {
		file_grpclib_cryptoService_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpclib_cryptoService_proto_rawDescData)
	})
	return file_grpclib_cryptoService_proto_rawDescData
}

var file_grpclib_cryptoService_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpclib_cryptoService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_grpclib_cryptoService_proto_goTypes = []interface{}{
	(CryptoRequest_KeyType)(0),    // 0: grpclib.CryptoRequest.KeyType
	(*CryptoRequest)(nil),         // 1: grpclib.CryptoRequest
	(*RandomRequest)(nil),         // 2: grpclib.RandomRequest
	(*SSMReply)(nil),              // 3: grpclib.SSMReply
	(*EmptyRequest)(nil),          // 4: grpclib.EmptyRequest
	(*CryptoRequest_KeyInfo)(nil), // 5: grpclib.CryptoRequest.KeyInfo
}
var file_grpclib_cryptoService_proto_depIdxs = []int32{
	0, // 0: grpclib.CryptoRequest.key_type:type_name -> grpclib.CryptoRequest.KeyType
	5, // 1: grpclib.CryptoRequest.keyInfo:type_name -> grpclib.CryptoRequest.KeyInfo
	1, // 2: grpclib.CryptoService.SSMEncrypt:input_type -> grpclib.CryptoRequest
	1, // 3: grpclib.CryptoService.SSMDecrypt:input_type -> grpclib.CryptoRequest
	2, // 4: grpclib.CryptoService.SSMGetRandom:input_type -> grpclib.RandomRequest
	4, // 5: grpclib.CryptoService.SSMPing:input_type -> grpclib.EmptyRequest
	3, // 6: grpclib.CryptoService.SSMEncrypt:output_type -> grpclib.SSMReply
	3, // 7: grpclib.CryptoService.SSMDecrypt:output_type -> grpclib.SSMReply
	3, // 8: grpclib.CryptoService.SSMGetRandom:output_type -> grpclib.SSMReply
	3, // 9: grpclib.CryptoService.SSMPing:output_type -> grpclib.SSMReply
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpclib_cryptoService_proto_init() }
func file_grpclib_cryptoService_proto_init() {
	if File_grpclib_cryptoService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpclib_cryptoService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpclib_cryptoService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpclib_cryptoService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSMReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpclib_cryptoService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpclib_cryptoService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoRequest_KeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpclib_cryptoService_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpclib_cryptoService_proto_goTypes,
		DependencyIndexes: file_grpclib_cryptoService_proto_depIdxs,
		EnumInfos:         file_grpclib_cryptoService_proto_enumTypes,
		MessageInfos:      file_grpclib_cryptoService_proto_msgTypes,
	}.Build()
	File_grpclib_cryptoService_proto = out.File
	file_grpclib_cryptoService_proto_rawDesc = nil
	file_grpclib_cryptoService_proto_goTypes = nil
	file_grpclib_cryptoService_proto_depIdxs = nil
}
